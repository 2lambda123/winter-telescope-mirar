[tool.poetry]
name = "winterdrp"
version = "0.5.1"
description = "Modular open-source astronomy image reduction framework"
authors = ["Robert Stein <rdstein@caltech.edu>", "Viraj Karambelkar <viraj@astro.caltech.edu>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
astroplan = "^0.8"
astropy = {extras = ["recommended"], version = "^5.1.1"}
astroquery = "^0.4.6"
avro-python3 = "~1.10.1"
coveralls = {extras = ["toml"], version = "^3.3.1"}
confluent-kafka = "^1.9.2"
docker = "^6.0.1"
ephem = "^4.1.3"
fastavro = "^1.7.0"
jupyter = "^1.0.0"
matplotlib = "^3.6.2"
numpy = "~1.23.5"
pandas = "^1.5.2"
penquins = "^2.2.0"
photutils = "^1.5.0"
psycopg = {extras = ["binary"], version = "^3.1.4"}
pydl = {version = "^1.0.0rc1", allow-prereleases = true}
pyFFTW = "^0.13.0"
setuptools = "^65.6.3"
watchdog = "^2.1.9"
wget = "^3.2"
toml = "^0.10.2"
sphinx-mdinclude = "^0.5.3"

[tool.poetry.group.docs.dependencies]
sphinx = "^5.3.0"

[tool.coverage.run]
source = ["winterdrp"]
concurrency = ["thread"]
omit = ["winterdrp/__main__.py", "winterdrp/processors/send_to_fritz.py"]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain about missing debug-only code:
    "def __repr__",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    "raise KeyError",
    "except KeyError",
    "raise ValueError",
    "except JSONDecodeError:",
    "raise requests.exceptions.RequestException",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if False:",
    'if __name__ == "__main__":'
    ]
ignore_errors = true

[build-system]
requires = ["setuptools", "wheel", "poetry-core",]
build-backend = "poetry.core.masonry.api"


